package it.lispa.bdl.commons.domain;

// Generated 29-nov-2013 10.47.17 by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.SEQUENCE;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

/**
 * BdlImmagine generated by hbm2java.
 */
@Entity
@Table(name = "BDL_IMMAGINE")
public class BdlImmagine extends BdlDomainBase implements java.io.Serializable {

	/** La Costante serialVersionUID. */
	private static final long serialVersionUID = 1509263165732722892L;
	
	/** codice immagine. */
	private BigDecimal cdImmagine;
	
	/** codice oggetto originale. */
	private BigDecimal cdOggettoOriginale;
	
	/** denominazione nome immagine. */
	private String dnNomeImmagine;
	
	/** nr px larghezza thumb. */
	private BigDecimal nrPxLarghezzaThumb;
	
	/** nr px altezza thumb. */
	private BigDecimal nrPxAltezzaThumb;
	
	/** nr px larghezza reader. */
	private BigDecimal nrPxLarghezzaReader;
	
	/** nr px altezza reader. */
	private BigDecimal nrPxAltezzaReader;
	
	/** nr px larghezza zoom. */
	private BigDecimal nrPxLarghezzaZoom;
	
	/** nr px altezza zoom. */
	private BigDecimal nrPxAltezzaZoom;
	
	/** flag principale. */
	private Boolean flPrincipale;
	
	/**
	 * Istanzia un nuovo bdl immagine.
	 */
	public BdlImmagine() {
	}

	/**
	 * Istanzia un nuovo bdl immagine.
	 *
	 * @param cdOggettoOriginale  codice oggetto originale
	 * @param dnNomeImmagine  denominazione nome immagine
	 * @param flPrincipale  flag principale
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 */
	public BdlImmagine(
			BigDecimal cdOggettoOriginale, String dnNomeImmagine,
			Boolean flPrincipale, String dsCreatoda, Date dtCreatoil) {
		this.cdOggettoOriginale = cdOggettoOriginale;
		this.dnNomeImmagine = dnNomeImmagine;
		this.flPrincipale = flPrincipale;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
	}

	/**
	 * Istanzia un nuovo bdl immagine.
	 *
	 * @param cdImmagine  codice immagine
	 * @param cdOggettoOriginale  codice oggetto originale
	 * @param dnNomeImmagine  denominazione nome immagine
	 * @param flPrincipale  flag principale
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 */
	public BdlImmagine(BigDecimal cdImmagine,
			BigDecimal cdOggettoOriginale, String dnNomeImmagine,
			Boolean flPrincipale, String dsCreatoda, Date dtCreatoil) {
		this.cdImmagine = cdImmagine;
		this.cdOggettoOriginale = cdOggettoOriginale;
		this.dnNomeImmagine = dnNomeImmagine;
		this.flPrincipale = flPrincipale;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
	}

	/**
	 * Istanzia un nuovo bdl immagine.
	 *
	 * @param cdImmagine  codice immagine
	 * @param cdOggettoOriginale  codice oggetto originale
	 * @param dnNomeImmagine  denominazione nome immagine
	 * @param nrPxLarghezzaThumb  nr px larghezza thumb
	 * @param nrPxAltezzaThumb  nr px altezza thumb
	 * @param nrPxLarghezzaReader  nr px larghezza reader
	 * @param nrPxAltezzaReader  nr px altezza reader
	 * @param nrPxLarghezzaZoom  nr px larghezza zoom
	 * @param nrPxAltezzaZoom  nr px altezza zoom
	 * @param flPrincipale  flag principale
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 * @param dsModificatoda  descrizione modificatoda
	 * @param dtModificatoil  data modificatoil
	 */
	public BdlImmagine(BigDecimal cdImmagine,
			BigDecimal cdOggettoOriginale, String dnNomeImmagine,
			BigDecimal nrPxLarghezzaThumb, BigDecimal nrPxAltezzaThumb,
			BigDecimal nrPxLarghezzaReader, BigDecimal nrPxAltezzaReader,
			BigDecimal nrPxLarghezzaZoom, BigDecimal nrPxAltezzaZoom,
			Boolean flPrincipale, String dsCreatoda, Date dtCreatoil,
			String dsModificatoda, Date dtModificatoil) {
		this.cdImmagine = cdImmagine;
		this.cdOggettoOriginale = cdOggettoOriginale;
		this.dnNomeImmagine = dnNomeImmagine;
		this.nrPxLarghezzaThumb = nrPxLarghezzaThumb;
		this.nrPxAltezzaThumb = nrPxAltezzaThumb;
		this.nrPxLarghezzaReader = nrPxLarghezzaReader;
		this.nrPxAltezzaReader = nrPxAltezzaReader;
		this.nrPxLarghezzaZoom = nrPxLarghezzaZoom;
		this.nrPxAltezzaZoom = nrPxAltezzaZoom;
		this.flPrincipale = flPrincipale;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
		this.dsModificatoda = dsModificatoda;
		this.dtModificatoil = dtModificatoil;
	}

	/**
	 * Legge codice immagine.
	 *
	 * @return the codice immagine
	 */
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator="BDL_IMMAGINE_seqgen")
	@SequenceGenerator(name="BDL_IMMAGINE_seqgen", sequenceName="BDL_IMMAGINE_SEQ", allocationSize=1)
	@Column(name = "CD_IMMAGINE", unique = true, nullable = false, precision = 31, scale = 0)
	public BigDecimal getCdImmagine() {
		return this.cdImmagine;
	}

	/**
	 * Imposta codice immagine.
	 *
	 * @param cdImmagine the new codice immagine
	 */
	public void setCdImmagine(BigDecimal cdImmagine) {
		this.cdImmagine = cdImmagine;
	}

	/**
	 * Legge codice oggetto originale.
	 *
	 * @return the codice oggetto originale
	 */
	@Column(name = "CD_OGGETTO_ORIGINALE", nullable = false, precision = 31, scale = 0)
	public BigDecimal getCdOggettoOriginale() {
		return this.cdOggettoOriginale;
	}

	/**
	 * Imposta codice oggetto originale.
	 *
	 * @param cdOggettoOriginale the new codice oggetto originale
	 */
	public void setCdOggettoOriginale(BigDecimal cdOggettoOriginale) {
		this.cdOggettoOriginale = cdOggettoOriginale;
	}

	/**
	 * Legge denominazione nome immagine.
	 *
	 * @return the denominazione nome immagine
	 */
	@Column(name = "DN_NOME_IMMAGINE", nullable = false, length = 10)
	public String getDnNomeImmagine() {
		return this.dnNomeImmagine;
	}

	/**
	 * Imposta denominazione nome immagine.
	 *
	 * @param dnNomeImmagine the new denominazione nome immagine
	 */
	public void setDnNomeImmagine(String dnNomeImmagine) {
		this.dnNomeImmagine = dnNomeImmagine;
	}

	/**
	 * Legge nr px larghezza thumb.
	 *
	 * @return the nr px larghezza thumb
	 */
	@Column(name = "NR_PX_LARGHEZZA_THUMB", precision = 31, scale = 0)
	public BigDecimal getNrPxLarghezzaThumb() {
		return this.nrPxLarghezzaThumb;
	}

	/**
	 * Imposta nr px larghezza thumb.
	 *
	 * @param nrPxLarghezzaThumb the new nr px larghezza thumb
	 */
	public void setNrPxLarghezzaThumb(BigDecimal nrPxLarghezzaThumb) {
		this.nrPxLarghezzaThumb = nrPxLarghezzaThumb;
	}

	/**
	 * Legge nr px altezza thumb.
	 *
	 * @return the nr px altezza thumb
	 */
	@Column(name = "NR_PX_ALTEZZA_THUMB", precision = 31, scale = 0)
	public BigDecimal getNrPxAltezzaThumb() {
		return this.nrPxAltezzaThumb;
	}

	/**
	 * Imposta nr px altezza thumb.
	 *
	 * @param nrPxAltezzaThumb the new nr px altezza thumb
	 */
	public void setNrPxAltezzaThumb(BigDecimal nrPxAltezzaThumb) {
		this.nrPxAltezzaThumb = nrPxAltezzaThumb;
	}

	/**
	 * Legge nr px larghezza reader.
	 *
	 * @return the nr px larghezza reader
	 */
	@Column(name = "NR_PX_LARGHEZZA_READER", precision = 31, scale = 0)
	public BigDecimal getNrPxLarghezzaReader() {
		return this.nrPxLarghezzaReader;
	}

	/**
	 * Imposta nr px larghezza reader.
	 *
	 * @param nrPxLarghezzaReader the new nr px larghezza reader
	 */
	public void setNrPxLarghezzaReader(BigDecimal nrPxLarghezzaReader) {
		this.nrPxLarghezzaReader = nrPxLarghezzaReader;
	}

	/**
	 * Legge nr px altezza reader.
	 *
	 * @return the nr px altezza reader
	 */
	@Column(name = "NR_PX_ALTEZZA_READER", precision = 31, scale = 0)
	public BigDecimal getNrPxAltezzaReader() {
		return this.nrPxAltezzaReader;
	}

	/**
	 * Imposta nr px altezza reader.
	 *
	 * @param nrPxAltezzaReader the new nr px altezza reader
	 */
	public void setNrPxAltezzaReader(BigDecimal nrPxAltezzaReader) {
		this.nrPxAltezzaReader = nrPxAltezzaReader;
	}

	/**
	 * Legge flag principale.
	 *
	 * @return the flag principale
	 */
	@Column(name = "FL_PRINCIPALE", nullable = false)
	@Type(type="true_false")
	public Boolean getFlPrincipale() {
		return this.flPrincipale;
	}

	/**
	 * Imposta flag principale.
	 *
	 * @param flPrincipale the new flag principale
	 */
	public void setFlPrincipale(Boolean flPrincipale) {
		this.flPrincipale = flPrincipale;
	}

	/**
	 * Legge nr px larghezza zoom.
	 *
	 * @return the nr px larghezza zoom
	 */
	@Column(name = "NR_PX_LARGHEZZA_ZOOM", precision = 31, scale = 0)
	public BigDecimal getNrPxLarghezzaZoom() {
		return this.nrPxLarghezzaZoom;
	}

	/**
	 * Imposta nr px larghezza zoom.
	 *
	 * @param nrPxLarghezzaZoom the new nr px larghezza zoom
	 */
	public void setNrPxLarghezzaZoom(BigDecimal nrPxLarghezzaZoom) {
		this.nrPxLarghezzaZoom = nrPxLarghezzaZoom;
	}

	/**
	 * Legge nr px altezza zoom.
	 *
	 * @return the nr px altezza zoom
	 */
	@Column(name = "NR_PX_ALTEZZA_ZOOM", precision = 31, scale = 0)
	public BigDecimal getNrPxAltezzaZoom() {
		return this.nrPxAltezzaZoom;
	}

	/**
	 * Imposta nr px altezza zoom.
	 *
	 * @param nrPxAltezzaZoom the new nr px altezza zoom
	 */
	public void setNrPxAltezzaZoom(BigDecimal nrPxAltezzaZoom) {
		this.nrPxAltezzaZoom = nrPxAltezzaZoom;
	}
}
