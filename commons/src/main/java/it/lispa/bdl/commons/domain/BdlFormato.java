package it.lispa.bdl.commons.domain;

// Generated 29-nov-2013 10.47.17 by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.SEQUENCE;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

/**
 * BdlFormato generated by hbm2java.
 */
@Entity
@Table(name = "BDL_FORMATO")
public class BdlFormato extends BdlDomainBase implements java.io.Serializable {

	/** La Costante serialVersionUID. */
	private static final long serialVersionUID = 7580997162138097475L;
	
	/** codice formato. */
	private BigDecimal cdFormato;
	
	/** denominazione nome formato. */
	private String dnNomeFormato;
	
	/** flag regola naming. */
	private Boolean flRegolaNaming;
	
	/** descrizione estensione. */
	private String dsEstensione;
	
	/** flag defaultforthumb. */
	private Boolean flDefaultforthumb;
	
	/** flag defaultforreader. */
	private Boolean flDefaultforreader;
	
	/** flag defaultforzoom. */
	private Boolean flDefaultforzoom;
	
	/** vl risoluzione. */
	private BigDecimal vlRisoluzione;
	
	/** vl pixel box size. */
	private BigDecimal vlPixelBoxSize;
	
	/** codice tipo oggetto. */
	private BigDecimal cdTipoOggetto;
	
	/** descrizione natura. */
	private String dsNatura;
	
	/**
	 * Istanzia un nuovo bdl formato.
	 */
	public BdlFormato() { 
	}

	/**
	 * Istanzia un nuovo bdl formato.
	 *
	 * @param dnNomeFormato  denominazione nome formato
	 * @param flRegolaNaming  flag regola naming
	 * @param dsEstensione  descrizione estensione
	 * @param flDefaultforthumb  flag defaultforthumb
	 * @param flDefaultforreader  flag defaultforreader
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 */
	public BdlFormato(String dnNomeFormato,
			Boolean flRegolaNaming, String dsEstensione,
			Boolean flDefaultforthumb, Boolean flDefaultforreader, String dsCreatoda,
			Date dtCreatoil) {
		this.dnNomeFormato = dnNomeFormato;
		this.flRegolaNaming = flRegolaNaming;
		this.dsEstensione = dsEstensione;
		this.flDefaultforthumb = flDefaultforthumb;
		this.flDefaultforreader = flDefaultforreader;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
	}
	
	/**
	 * Istanzia un nuovo bdl formato.
	 *
	 * @param cdFormato  codice formato
	 * @param dnNomeFormato  denominazione nome formato
	 * @param flRegolaNaming  flag regola naming
	 * @param dsEstensione  descrizione estensione
	 * @param flDefaultforthumb  flag defaultforthumb
	 * @param flDefaultforreader  flag defaultforreader
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 */
	public BdlFormato(BigDecimal cdFormato, String dnNomeFormato,
			Boolean flRegolaNaming, String dsEstensione,
			Boolean flDefaultforthumb, Boolean flDefaultforreader, String dsCreatoda,
			Date dtCreatoil) {
		this.cdFormato = cdFormato;
		this.dnNomeFormato = dnNomeFormato;
		this.flRegolaNaming = flRegolaNaming;
		this.dsEstensione = dsEstensione;
		this.flDefaultforthumb = flDefaultforthumb;
		this.flDefaultforreader = flDefaultforreader;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
	}

	/**
	 * Istanzia un nuovo bdl formato.
	 *
	 * @param cdFormato  codice formato
	 * @param dnNomeFormato  denominazione nome formato
	 * @param flRegolaNaming  flag regola naming
	 * @param dsEstensione  descrizione estensione
	 * @param flDefaultforthumb  flag defaultforthumb
	 * @param flDefaultforreader  flag defaultforreader
	 * @param vlRisoluzione  vl risoluzione
	 * @param vlPixelBoxSize  vl pixel box size
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 * @param dsModificatoda  descrizione modificatoda
	 * @param dtModificatoil  data modificatoil
	 */
	public BdlFormato(BigDecimal cdFormato, String dnNomeFormato,
			Boolean flRegolaNaming, String dsEstensione,
			Boolean flDefaultforthumb, Boolean flDefaultforreader,
			BigDecimal vlRisoluzione, BigDecimal vlPixelBoxSize, String dsCreatoda, Date dtCreatoil,
			String dsModificatoda, Date dtModificatoil) {
		this.cdFormato = cdFormato;
		this.dnNomeFormato = dnNomeFormato;
		this.flRegolaNaming = flRegolaNaming;
		this.dsEstensione = dsEstensione;
		this.flDefaultforthumb = flDefaultforthumb;
		this.flDefaultforreader = flDefaultforreader;
		this.vlRisoluzione = vlRisoluzione;
		this.vlPixelBoxSize = vlPixelBoxSize;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
		this.dsModificatoda = dsModificatoda;
		this.dtModificatoil = dtModificatoil;
	}
	
	/**
	 * Istanzia un nuovo bdl formato.
	 *
	 * @param cdFormato  codice formato
	 * @param dnNomeFormato  denominazione nome formato
	 * @param flRegolaNaming  flag regola naming
	 * @param dsEstensione  descrizione estensione
	 * @param flDefaultforthumb  flag defaultforthumb
	 * @param flDefaultforreader  flag defaultforreader
	 * @param flDefaultforzoom  flag defaultforzoom
	 * @param vlRisoluzione  vl risoluzione
	 * @param vlPixelBoxSize  vl pixel box size
	 * @param cdTipoOggetto  codice tipo oggetto
	 * @param dsNatura  descrizione natura
	 * @param dsCreatoda  descrizione creatoda
	 * @param dtCreatoil  data creatoil
	 * @param dsModificatoda  descrizione modificatoda
	 * @param dtModificatoil  data modificatoil
	 */
	public BdlFormato(BigDecimal cdFormato, String dnNomeFormato,
			Boolean flRegolaNaming, String dsEstensione,
			Boolean flDefaultforthumb, Boolean flDefaultforreader,
			Boolean flDefaultforzoom, BigDecimal vlRisoluzione,
			BigDecimal vlPixelBoxSize, BigDecimal cdTipoOggetto,
			String dsNatura, String dsCreatoda, Date dtCreatoil,
			String dsModificatoda, Date dtModificatoil) {
		this.cdFormato = cdFormato;
		this.dnNomeFormato = dnNomeFormato;
		this.flRegolaNaming = flRegolaNaming;
		this.dsEstensione = dsEstensione;
		this.flDefaultforthumb = flDefaultforthumb;
		this.flDefaultforreader = flDefaultforreader;
		this.flDefaultforzoom = flDefaultforzoom;
		this.vlRisoluzione = vlRisoluzione;
		this.vlPixelBoxSize = vlPixelBoxSize;
		this.cdTipoOggetto = cdTipoOggetto;
		this.dsNatura = dsNatura;
		this.dsCreatoda = dsCreatoda;
		this.dtCreatoil = dtCreatoil;
		this.dsModificatoda = dsModificatoda;
		this.dtModificatoil = dtModificatoil;
	}

	/**
	 * Legge codice formato.
	 *
	 * @return the codice formato
	 */
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator="BDL_FORMATO_seqgen")
	@SequenceGenerator(name="BDL_FORMATO_seqgen", sequenceName="BDL_FORMATO_SEQ", allocationSize=1)
	@Column(name = "CD_FORMATO", unique = true, nullable = false, precision = 31, scale = 0)
	public BigDecimal getCdFormato() {
		return this.cdFormato;
	}

	/**
	 * Imposta codice formato.
	 *
	 * @param cdFormato the new codice formato
	 */
	public void setCdFormato(BigDecimal cdFormato) {
		this.cdFormato = cdFormato;
	}

	/**
	 * Legge denominazione nome formato.
	 *
	 * @return the denominazione nome formato
	 */
	@Column(name = "DN_NOME_FORMATO", nullable = false, length = 50)
	public String getDnNomeFormato() {
		return this.dnNomeFormato;
	}

	/**
	 * Imposta denominazione nome formato.
	 *
	 * @param dnNomeFormato the new denominazione nome formato
	 */
	public void setDnNomeFormato(String dnNomeFormato) {
		this.dnNomeFormato = dnNomeFormato;
	}

	/**
	 * Legge flag regola naming.
	 *
	 * @return the flag regola naming
	 */
	@Column(name = "FL_REGOLA_NAMING", nullable = false)
	@Type(type="true_false")
	public Boolean getFlRegolaNaming() {
		return this.flRegolaNaming;
	}

	/**
	 * Imposta flag regola naming.
	 *
	 * @param flRegolaNaming the new flag regola naming
	 */
	public void setFlRegolaNaming(Boolean flRegolaNaming) {
		this.flRegolaNaming = flRegolaNaming;
	}

	/**
	 * Legge descrizione estensione.
	 *
	 * @return the descrizione estensione
	 */
	@Column(name = "DS_ESTENSIONE", nullable = false, length = 4)
	public String getDsEstensione() {
		return this.dsEstensione;
	}

	/**
	 * Imposta descrizione estensione.
	 *
	 * @param dsEstensione the new descrizione estensione
	 */
	public void setDsEstensione(String dsEstensione) {
		this.dsEstensione = dsEstensione;
	}

	/**
	 * Legge flag defaultforthumb.
	 *
	 * @return the flag defaultforthumb
	 */
	@Column(name = "FL_DEFAULTFORTHUMB", nullable = false)
	@Type(type="true_false")
	public Boolean getFlDefaultforthumb() {
		return this.flDefaultforthumb;
	}

	/**
	 * Imposta flag defaultforthumb.
	 *
	 * @param flDefaultforthumb the new flag defaultforthumb
	 */
	public void setFlDefaultforthumb(Boolean flDefaultforthumb) {
		this.flDefaultforthumb = flDefaultforthumb;
	}

	/**
	 * Legge flag defaultforreader.
	 *
	 * @return the flag defaultforreader
	 */
	@Column(name = "FL_DEFAULTFORREADER", nullable = false)
	@Type(type="true_false")
	public Boolean getFlDefaultforreader() {
		return this.flDefaultforreader;
	}

	/**
	 * Imposta flag defaultforreader.
	 *
	 * @param flDefaultforreader the new flag defaultforreader
	 */
	public void setFlDefaultforreader(Boolean flDefaultforreader) {
		this.flDefaultforreader = flDefaultforreader;
	}

	/**
	 * Legge vl risoluzione.
	 *
	 * @return the vl risoluzione
	 */
	@Column(name = "VL_RISOLUZIONE", precision = 31, scale = 0)
	public BigDecimal getVlRisoluzione() {
		return this.vlRisoluzione;
	}

	/**
	 * Imposta vl risoluzione.
	 *
	 * @param vlRisoluzione the new vl risoluzione
	 */
	public void setVlRisoluzione(BigDecimal vlRisoluzione) {
		this.vlRisoluzione = vlRisoluzione;
	}

	/**
	 * Legge vl pixel box size.
	 *
	 * @return the vl pixel box size
	 */
	@Column(name = "VL_PIXELBOXSIZE", precision = 31, scale = 0)
	public BigDecimal getVlPixelBoxSize() {
		return vlPixelBoxSize;
	}

	/**
	 * Imposta vl pixel box size.
	 *
	 * @param vlPixelBoxSize the new vl pixel box size
	 */
	public void setVlPixelBoxSize(BigDecimal vlPixelBoxSize) {
		this.vlPixelBoxSize = vlPixelBoxSize;
	}

	/**
	 * Legge codice tipo oggetto.
	 *
	 * @return the codice tipo oggetto
	 */
	@Column(name = "CD_TIPO_OGGETTO", precision = 31, scale = 0, nullable = false)
	public BigDecimal getCdTipoOggetto() {
		return cdTipoOggetto;
	}
	
	/**
	 * Imposta codice tipo oggetto.
	 *
	 * @param cdTipoOggetto the new codice tipo oggetto
	 */
	public void setCdTipoOggetto(BigDecimal cdTipoOggetto) {
		this.cdTipoOggetto = cdTipoOggetto;
	}
	
	/**
	 * Legge flag defaultforzoom.
	 *
	 * @return the flag defaultforzoom
	 */
	@Column(name = "FL_DEFAULTFORZOOM", nullable = false)
	@Type(type="true_false")
	public Boolean getFlDefaultforzoom() {
		return this.flDefaultforzoom;
	}

	/**
	 * Imposta flag defaultforzoom.
	 *
	 * @param flDefaultforzoom the new flag defaultforzoom
	 */
	public void setFlDefaultforzoom(Boolean flDefaultforzoom) {
		this.flDefaultforzoom = flDefaultforzoom;
	}

	/**
	 * Legge descrizione natura.
	 *
	 * @return the descrizione natura
	 */
	@Column(name = "DS_NATURA", nullable = false)
	public String getDsNatura() {
		return dsNatura;
	}

	/**
	 * Imposta descrizione natura.
	 *
	 * @param dsNatura the new descrizione natura
	 */
	public void setDsNatura(String dsNatura) {
		this.dsNatura = dsNatura;
	}
}
